apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.3"

    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}



android {
    flavorDimensions "mode"
    productFlavors {
        free {
            applicationId "com.udacity.gradle.builditbigger.free"
            dimension "mode"
        }
        paid {
            applicationId "com.udacity.gradle.builditbigger.paid"
            dimension "mode"
        }
    }
}




dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile 'com.android.support:appcompat-v7:26.1.0'

    // only for free version
    freeCompile 'com.google.android.gms:play-services-ads:11.6.2'

    // only when testing with espresso
    androidTestCompile project(':javaJokes')

    compile project(':androidJokes')
    compile project(path: ':backend', configuration: 'android-endpoints')

    //espresso
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile 'com.android.support.test.espresso:espresso-idling-resource:3.0.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:3.0.1'
    compile 'com.google.code.findbugs:jsr305:2.0.1'

}

//https://stackoverflow.com/questions/31434928/android-gradle-task-google-appengine
task jokeConnectedCheck (dependsOn: ":backend:appengineStop") {
    group "Extra tasks"
    description "(Re)Starts backend, runs app:connectedCheck (need a connected device) and then stops the backend."
    project(":backend").afterEvaluate { backend ->
        backend.extensions.appengine.daemon = true
    }
    doLast {
        println "Let's go!"
    }

}
jokeConnectedCheck.finalizedBy ":app:startBackend"

task startBackend(dependsOn: ":backend:appengineRun") {
    doLast {
        println "started the backend!"
    }
}
startBackend.finalizedBy ":app:runTests"

task runTests (dependsOn: ":app:connectedCheck") {

    doLast {
        println "ran the tests!"
    }
}
runTests.finalizedBy ":app:stopBackend"
task stopBackend (dependsOn: ":backend:appengineStop") {

    doLast {
        println "stopped the backend!"
    }
}
